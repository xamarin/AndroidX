parameters:
  dotnetTools: []
  runDotnetNextTest: false
  
steps:
  # before the build starts, make sure the tooling is as expected
  - task: UseDotNet@2
    displayName: 'Use dotnet $(dotnetVersion)'
    inputs:
      version: $(dotnetVersion)
      performMultiLevelLookup: true
      includePreviewVersions: true
    condition: ne('$(dotnetVersion)', '')

  - pwsh: |
      dotnet workload install android --verbosity diag --from-rollback-file $(dotnetWorkloadRollbackFile) --source $(dotnetWorkloadSource) --source $(dotnetNuGetOrgSource)
      dotnet workload install maui --verbosity diag --from-rollback-file $(dotnetWorkloadRollbackFile) --source $(dotnetWorkloadSource) --source $(dotnetNuGetOrgSource)
      if ($LASTEXITCODE -ne 0) {
          Write-Host "##vso[task.logissue type=error]Failed to install workloads."
          Write-Host "##vso[task.complete result=Failed;]"
          exit 0
      }
    displayName: Install .NET Workloads

  - bash: |
      echo "##vso[task.setvariable variable=JAVA_HOME]/Library/Java/JavaVirtualMachines/microsoft-11.jdk/Contents/Home"
    displayName: Use Java 11 SDK (Mac)
    condition: eq( variables['Agent.OS'], 'Darwin' )
          
  - task: JavaToolInstaller@0
    displayName: Use Java 11 SDK (Windows)
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
